{"ast":null,"code":"var _jsxFileName = \"/Users/bryankayne/Documents/display/display/src/components/MainInput.js\",\n  _s = $RefreshSig$();\n// src/components/MainInput.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainInput() {\n  _s();\n  // State to store the list of entered NFT URLs.\n  const [nftUrls, setNftUrls] = useState([]);\n\n  // State to store the current value of the input box.\n  const [currentInput, setCurrentInput] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter any NFT URL...\",\n      value: currentInput,\n      onChange: e => setCurrentInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (nftUrls.length < 8 && currentInput) {\n          setNftUrls([...nftUrls, currentInput]);\n          setCurrentInput(''); // Reset the input field after adding\n        }\n      },\n      children: \"Add NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"url-list\",\n      children: nftUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: url\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(MainInput, \"finsTInP8fHVL5BlJI2wB4bCxOA=\");\n_c = MainInput;\nexport default MainInput;\nvar _c;\n$RefreshReg$(_c, \"MainInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MainInput","_s","nftUrls","setNftUrls","currentInput","setCurrentInput","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","className","map","url","index","_c","$RefreshReg$"],"sources":["/Users/bryankayne/Documents/display/display/src/components/MainInput.js"],"sourcesContent":["// src/components/MainInput.js\n\nimport React, { useState } from 'react';\n\nfunction MainInput() {\n    // State to store the list of entered NFT URLs.\n    const [nftUrls, setNftUrls] = useState([]);\n\n    // State to store the current value of the input box.\n    const [currentInput, setCurrentInput] = useState('');\n\n    return (\n        <div>\n            {/* Input for entering the NFT URL */}\n            <input \n                type=\"text\" \n                placeholder=\"Enter any NFT URL...\" \n                value={currentInput} \n                onChange={(e) => setCurrentInput(e.target.value)} \n            />\n\n            {/* Button to add the entered URL to the list */}\n            <button onClick={() => {\n                if (nftUrls.length < 8 && currentInput) {\n                    setNftUrls([...nftUrls, currentInput]);\n                    setCurrentInput('');  // Reset the input field after adding\n                }\n            }}>\n                Add NFT\n            </button>\n\n            {/* Display the list of entered URLs */}\n            <div className=\"url-list\">\n                {nftUrls.map((url, index) => (\n                    <div key={index}>{url}</div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MainInput;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,oBACIE,OAAA;IAAAO,QAAA,gBAEIP,OAAA;MACIQ,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAEL,YAAa;MACpBM,QAAQ,EAAGC,CAAC,IAAKN,eAAe,CAACM,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eAGFjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAM;QACnB,IAAIf,OAAO,CAACgB,MAAM,GAAG,CAAC,IAAId,YAAY,EAAE;UACpCD,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEE,YAAY,CAAC,CAAC;UACtCC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAE;QAC1B;MACJ,CAAE;MAAAC,QAAA,EAAC;IAEH;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTjB,OAAA;MAAKoB,SAAS,EAAC,UAAU;MAAAb,QAAA,EACpBJ,OAAO,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACpBvB,OAAA;QAAAO,QAAA,EAAkBe;MAAG,GAAXC,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACf,EAAA,CAnCQD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAqClB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}