{"ast":null,"code":"var _jsxFileName = \"/Users/bryankayne/Documents/display/display/src/components/MainInput.js\",\n  _s = $RefreshSig$();\n// src/components/MainInput.js\nimport './MainInput.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainInput() {\n  _s();\n  // State to store the list of entered NFT URLs.\n  const [nftUrls, setNftUrls] = useState([]);\n\n  // State to store the current value of the input box.\n  const [currentInput, setCurrentInput] = useState('');\n\n  // 1 for input step, 2 for details step\n  const [currentStep, setCurrentStep] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter NFT URL...\",\n          value: currentInput,\n          onChange: e => setCurrentInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (nftUrls.length < 8 && currentInput && !nftUrls.includes(currentInput)) {\n              setNftUrls([...nftUrls, currentInput]);\n              setCurrentInput('');\n              if (nftUrls.length === 7) {\n                setCurrentStep(2);\n              }\n            } else {\n              alert(\"URL already added or input is empty!\");\n            }\n          },\n          children: \"Add NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter\",\n        children: [nftUrls.length, \" / 8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"url-list\",\n        children: nftUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"url-card\",\n          children: url\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentStep(2),\n        children: \"Next Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Display Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description (max 69 characters)\",\n        maxLength: 69\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(MainInput, \"FisbMInYMd6kcOQD82Ef2KDrLhY=\");\n_c = MainInput;\nexport default MainInput;\nvar _c;\n$RefreshReg$(_c, \"MainInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MainInput","_s","nftUrls","setNftUrls","currentInput","setCurrentInput","currentStep","setCurrentStep","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","includes","alert","map","url","index","maxLength","_c","$RefreshReg$"],"sources":["/Users/bryankayne/Documents/display/display/src/components/MainInput.js"],"sourcesContent":["// src/components/MainInput.js\nimport './MainInput.css';\nimport React, { useState } from 'react';\n\nfunction MainInput() {\n    // State to store the list of entered NFT URLs.\n    const [nftUrls, setNftUrls] = useState([]);\n\n    // State to store the current value of the input box.\n    const [currentInput, setCurrentInput] = useState('');\n\n    // 1 for input step, 2 for details step\n    const [currentStep, setCurrentStep] = useState(1); \n\n\n    return (\n        <div>\n            {currentStep === 1 ? (\n                <>\n                    <div className=\"input-container\">\n                        <input \n                            type=\"text\" \n                            placeholder=\"Enter NFT URL...\" \n                            value={currentInput} \n                            onChange={(e) => setCurrentInput(e.target.value)} \n                        />\n                        <button onClick={() => {\n                            if (nftUrls.length < 8 && currentInput && !nftUrls.includes(currentInput)) {\n                                setNftUrls([...nftUrls, currentInput]);\n                                setCurrentInput('');\n                                if (nftUrls.length === 7) {\n                                    setCurrentStep(2);\n                                }\n                            } else {\n                                alert(\"URL already added or input is empty!\");\n                            }\n                        }}>\n                            Add NFT\n                        </button>\n                    </div>\n                    <div className=\"counter\">\n                        {nftUrls.length} / 8\n                    </div>\n                    <div className=\"url-list\">\n                        {nftUrls.map((url, index) => (\n                            <div key={index} className=\"url-card\">\n                                {url}\n                            </div>\n                        ))}\n                    </div>\n                    <button onClick={() => setCurrentStep(2)}>Next Step</button>\n                </>\n            ) : (\n                <>\n                    {/* All the details related elements */}\n                    <input placeholder=\"Display Name\" />\n                    <textarea placeholder=\"Description (max 69 characters)\" maxLength={69}></textarea>\n                    {/* ... add other details elements here ... */}\n                </>\n            )}\n        </div>\n    );\n    \n\n}\n\nexport default MainInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}