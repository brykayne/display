{"ast":null,"code":"var _jsxFileName = \"/Users/bryankayne/Documents/display/display/src/components/MainInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MainInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainInput() {\n  _s();\n  const [currentInput, setCurrentInput] = useState('');\n  const [nftUrls, setNftUrls] = useState([]);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [displayNameCount, setDisplayNameCount] = useState(0);\n  const [descriptionCount, setDescriptionCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter NFT URL...\",\n          value: currentInput,\n          onChange: e => setCurrentInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (nftUrls.length < 8 && currentInput && !nftUrls.includes(currentInput)) {\n              setNftUrls([...nftUrls, currentInput]);\n              setCurrentInput('');\n            } else {\n              alert(\"URL already added or input is empty!\");\n            }\n          },\n          children: \"Add NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter\",\n        children: [nftUrls.length, \" / 8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"url-list\",\n        children: nftUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"url-card\",\n          children: url\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentStep(2),\n        children: \"Next Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), currentStep === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Display Name\",\n          maxLength: 69,\n          onChange: e => {\n            setDisplayNameCount(e.target.value.length);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [displayNameCount, \" / 69\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textarea-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description (max 420 characters)\",\n          maxLength: 420,\n          onChange: e => {\n            setDescriptionCount(e.target.value.length);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [descriptionCount, \" / 420\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentStep(1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(MainInput, \"qkmqEIzmqtapE1EXNgrMaEpsjpc=\");\n_c = MainInput;\nexport default MainInput;\nvar _c;\n$RefreshReg$(_c, \"MainInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MainInput","_s","currentInput","setCurrentInput","nftUrls","setNftUrls","currentStep","setCurrentStep","displayNameCount","setDisplayNameCount","descriptionCount","setDescriptionCount","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","includes","alert","map","url","index","maxLength","_c","$RefreshReg$"],"sources":["/Users/bryankayne/Documents/display/display/src/components/MainInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './MainInput.css';\n\nfunction MainInput() {\n    const [currentInput, setCurrentInput] = useState('');\n    const [nftUrls, setNftUrls] = useState([]);\n    const [currentStep, setCurrentStep] = useState(1);\n    const [displayNameCount, setDisplayNameCount] = useState(0);\n    const [descriptionCount, setDescriptionCount] = useState(0);\n\n    return (\n        <div>\n            {currentStep === 1 && (\n                <>\n                    <div className=\"input-container\">\n                        <input \n                            type=\"text\" \n                            placeholder=\"Enter NFT URL...\" \n                            value={currentInput} \n                            onChange={(e) => setCurrentInput(e.target.value)} \n                        />\n                        <button onClick={() => {\n                            if (nftUrls.length < 8 && currentInput && !nftUrls.includes(currentInput)) {\n                                setNftUrls([...nftUrls, currentInput]);\n                                setCurrentInput('');\n                            } else {\n                                alert(\"URL already added or input is empty!\");\n                            }\n                        }}>\n                            Add NFT\n                        </button>\n                    </div>\n                    <div className=\"counter\">\n                        {nftUrls.length} / 8\n                    </div>\n                    <div className=\"url-list\">\n                        {nftUrls.map((url, index) => (\n                            <div key={index} className=\"url-card\">\n                                {url}\n                            </div>\n                        ))}\n                    </div>\n                    <button onClick={() => setCurrentStep(2)}>Next Step</button>\n                </>\n            )}\n\n            {currentStep === 2 && (\n                <>\n                    <div className=\"input-counter\">\n                        <input \n                            placeholder=\"Display Name\"\n                            maxLength={69} \n                            onChange={(e) => {\n                                setDisplayNameCount(e.target.value.length);\n                            }}\n                        />\n                        <span>{displayNameCount} / 69</span>\n                    </div>\n\n                    <div className=\"textarea-counter\">\n                        <textarea \n                            placeholder=\"Description (max 420 characters)\" \n                            maxLength={420} \n                            onChange={(e) => {\n                                setDescriptionCount(e.target.value.length);\n                            }}\n                        ></textarea>\n                        <span>{descriptionCount} / 420</span>\n                    </div>\n                    \n                    {/* ... other details step elements ... */}\n\n                    <button onClick={() => setCurrentStep(1)}>Previous</button>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default MainInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}