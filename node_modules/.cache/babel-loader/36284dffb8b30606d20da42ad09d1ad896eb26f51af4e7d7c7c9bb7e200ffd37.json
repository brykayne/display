{"ast":null,"code":"var _jsxFileName = \"/Users/bryankayne/Documents/display/display/src/components/MainInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport './MainInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainInput() {\n  _s();\n  const [currentInput, setCurrentInput] = useState('');\n  const [nftData, setNftData] = useState([]);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [displayNameCount, setDisplayNameCount] = useState(0);\n  const [descriptionCount, setDescriptionCount] = useState(0);\n  const fetchNftMetadata = async url => {\n    const response = await axios.get(url);\n    const metadata = response.data;\n    return metadata;\n  };\n  const addNftToCard = async () => {\n    const metadata = await fetchNftMetadata(currentInput);\n    setNftData(prevData => [...prevData, {\n      url: currentInput,\n      metadata\n    }]);\n    setCurrentInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter NFT URL...\",\n          value: currentInput,\n          onChange: e => setCurrentInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (nftData.length < 8 && currentInput && !nftData.some(data => data.url === currentInput)) {\n              addNftToCard();\n            } else {\n              alert(\"URL already added or input is empty!\");\n            }\n          },\n          children: \"Add NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter\",\n        children: [nftData.length, \" / 8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"url-list\",\n        children: nftData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"url-card\",\n          children: [data.url, data.metadata && data.metadata.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.metadata.image,\n            alt: \"NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentStep(2),\n        children: \"Next Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), currentStep === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Display Name\",\n          maxLength: 69,\n          onChange: e => {\n            setDisplayNameCount(e.target.value.length);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [displayNameCount, \" / 69\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textarea-counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description (max 420 characters)\",\n          maxLength: 420,\n          onChange: e => {\n            setDescriptionCount(e.target.value.length);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [descriptionCount, \" / 420\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentStep(1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(MainInput, \"76aHzZKgWvy8LG/OzrVZqK174i8=\");\n_c = MainInput;\nexport default MainInput;\nvar _c;\n$RefreshReg$(_c, \"MainInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MainInput","_s","currentInput","setCurrentInput","nftData","setNftData","currentStep","setCurrentStep","displayNameCount","setDisplayNameCount","descriptionCount","setDescriptionCount","fetchNftMetadata","url","response","get","metadata","data","addNftToCard","prevData","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","some","alert","map","index","image","src","alt","maxLength","_c","$RefreshReg$"],"sources":["/Users/bryankayne/Documents/display/display/src/components/MainInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from \"axios\";\nimport './MainInput.css';\n\nfunction MainInput() {\n    const [currentInput, setCurrentInput] = useState('');\n    const [nftData, setNftData] = useState([]);\n    const [currentStep, setCurrentStep] = useState(1);\n    const [displayNameCount, setDisplayNameCount] = useState(0);\n    const [descriptionCount, setDescriptionCount] = useState(0);\n\n    const fetchNftMetadata = async (url) => {\n        const response = await axios.get(url);\n        const metadata = response.data;\n\n        return metadata;\n    };\n\n    const addNftToCard = async () => {\n        const metadata = await fetchNftMetadata(currentInput);\n        setNftData(prevData => [...prevData, { url: currentInput, metadata }]);\n        setCurrentInput('');\n    };\n\n    return (\n        <div>\n            {currentStep === 1 && (\n                <>\n                    <div className=\"input-container\">\n                        <input \n                            type=\"text\" \n                            placeholder=\"Enter NFT URL...\" \n                            value={currentInput} \n                            onChange={(e) => setCurrentInput(e.target.value)} \n                        />\n                        <button onClick={() => {\n                            if (nftData.length < 8 && currentInput && !nftData.some(data => data.url === currentInput)) {\n                                addNftToCard();\n                            } else {\n                                alert(\"URL already added or input is empty!\");\n                            }\n                        }}>\n                            Add NFT\n                        </button>\n                    </div>\n                    <div className=\"counter\">\n                        {nftData.length} / 8\n                    </div>\n                    <div className=\"url-list\">\n                        {nftData.map((data, index) => (\n                            <div key={index} className=\"url-card\">\n                                {data.url}\n                                {data.metadata && data.metadata.image && (\n                                    <img src={data.metadata.image} alt=\"NFT\" />\n                                )}\n                            </div>\n                        ))}\n                    </div>\n                    <button onClick={() => setCurrentStep(2)}>Next Step</button>\n                </>\n            )}\n\n            {currentStep === 2 && (\n                <>\n                    <div className=\"input-counter\">\n                        <input \n                            placeholder=\"Display Name\"\n                            maxLength={69} \n                            onChange={(e) => {\n                                setDisplayNameCount(e.target.value.length);\n                            }}\n                        />\n                        <span>{displayNameCount} / 69</span>\n                    </div>\n\n                    <div className=\"textarea-counter\">\n                        <textarea \n                            placeholder=\"Description (max 420 characters)\" \n                            maxLength={420} \n                            onChange={(e) => {\n                                setDescriptionCount(e.target.value.length);\n                            }}\n                        ></textarea>\n                        <span>{descriptionCount} / 420</span>\n                    </div>\n                    \n                    {/* ... other details step elements ... */}\n\n                    <button onClick={() => setCurrentStep(1)}>Previous</button>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default MainInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}