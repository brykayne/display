{"ast":null,"code":"var _jsxFileName = \"/Users/bryankayne/Documents/display/display/src/components/MainInput.js\",\n  _s = $RefreshSig$();\n// src/components/MainInput.js\nimport './MainInput.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainInput() {\n  _s();\n  // State to store the list of entered NFT URLs.\n  const [nftUrls, setNftUrls] = useState([]);\n\n  // State to store the current value of the input box.\n  const [currentInput, setCurrentInput] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter NFT URL...\",\n        value: currentInput,\n        onChange: e => setCurrentInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (nftUrls.length < 8 && currentInput) {\n            setNftUrls([...nftUrls, currentInput]);\n            setCurrentInput('');\n          }\n        },\n        children: \"Add NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [nftUrls.length, \" / 8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"url-list\",\n      children: nftUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"url-card\",\n        children: url\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(MainInput, \"finsTInP8fHVL5BlJI2wB4bCxOA=\");\n_c = MainInput;\nexport default MainInput;\nvar _c;\n$RefreshReg$(_c, \"MainInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MainInput","_s","nftUrls","setNftUrls","currentInput","setCurrentInput","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","url","index","_c","$RefreshReg$"],"sources":["/Users/bryankayne/Documents/display/display/src/components/MainInput.js"],"sourcesContent":["// src/components/MainInput.js\nimport './MainInput.css';\nimport React, { useState } from 'react';\n\nfunction MainInput() {\n    // State to store the list of entered NFT URLs.\n    const [nftUrls, setNftUrls] = useState([]);\n\n    // State to store the current value of the input box.\n    const [currentInput, setCurrentInput] = useState('');\n\n    return (\n        <div>\n            <div className=\"input-container\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter NFT URL...\" \n                    value={currentInput} \n                    onChange={(e) => setCurrentInput(e.target.value)} \n                />\n                <button onClick={() => {\n                    if (nftUrls.length < 8 && currentInput) {\n                        setNftUrls([...nftUrls, currentInput]);\n                        setCurrentInput('');\n                    }\n                }}>\n                    Add NFT\n                </button>\n            </div>\n    \n            {/* Counter */}\n            <div className=\"counter\">\n                {nftUrls.length} / 8\n            </div>\n    \n            {/* Display the list of entered URLs as cards */}\n            <div className=\"url-list\">\n                {nftUrls.map((url, index) => (\n                    <div key={index} className=\"url-card\">\n                        {url}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n    \n}\n\nexport default MainInput;\n"],"mappings":";;AAAA;AACA,OAAO,iBAAiB;AACxB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,oBACIE,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAKQ,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC5BP,OAAA;QACIS,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAEN,YAAa;QACpBO,QAAQ,EAAGC,CAAC,IAAKP,eAAe,CAACO,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eACFlB,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAM;UACnB,IAAIhB,OAAO,CAACiB,MAAM,GAAG,CAAC,IAAIf,YAAY,EAAE;YACpCD,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEE,YAAY,CAAC,CAAC;YACtCC,eAAe,CAAC,EAAE,CAAC;UACvB;QACJ,CAAE;QAAAC,QAAA,EAAC;MAEH;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGNlB,OAAA;MAAKQ,SAAS,EAAC,SAAS;MAAAD,QAAA,GACnBJ,OAAO,CAACiB,MAAM,EAAC,MACpB;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAGNlB,OAAA;MAAKQ,SAAS,EAAC,UAAU;MAAAD,QAAA,EACpBJ,OAAO,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACpBvB,OAAA;QAAiBQ,SAAS,EAAC,UAAU;QAAAD,QAAA,EAChCe;MAAG,GADEC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAAChB,EAAA,CA1CQD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA4ClB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}